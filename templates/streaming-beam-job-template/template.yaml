apiVersion: backstage.io/v1beta2
kind: Template
metadata:
    name: streaming-sql-job-template
    title: Streming SQL Job
    description: Create a simple streaming sql job using Flink
    tags:
        - rts
        - streaming
        - flink
        - sql
spec:
    owner: service@example.com
    type: stream

    parameters:
        - title: Provide job configuration
          required:
              - job_name
              - owner
              - package-name
          properties:
              job_name:
                  title: Job Name
                  type: string
                  description: Unique name of the job
              package-name:
                  title: Package Name
                  type: string
                  description: Package Name
              description:
                  title: Description
                  type: string
                  description: Help others understand what this job is for.
              owner:
                  title: Owner
                  type: string
                  description: Owner of the component
                  ui:field: OwnerPicker
                  ui:options:
                      allowedKinds:
                          - Group
        - title: Choose a location
          required:
              - repoUrl
          properties:
              repoUrl:
                  title: Repository Location
                  type: string
                  ui:field: RepoUrlPicker
                  ui:options:
                      allowedHosts:
                          - github.com

    steps:
        - id: template
          name: Fetch Skeleton + Template
          action: fetch:template
          input:
              url: ./skeleton
              values:
                  job_name: "{{ parameters.job_name }}"
                  description: "{{ parameters.description }}"
                  package_name: "{{ parameters.package_name }}"
                  owner: "{{ parameters.owner }}"
                  destination: "{{ parseRepoUrl parameters.repoUrl }}"

        - id: publish
          name: Publish
          action: publish:github
          input:
              allowedHosts: ["github.com"]
              description: "This is {{ parameters.job_name }}"
              repoUrl: "{{ parameters.repoUrl }}"

        - id: register
          name: Register
          action: catalog:register
          input:
              repoContentsUrl: "{{ steps.publish.output.repoContentsUrl }}"
              catalogInfoPath: "/catalog-info.yaml"

    output:
        remoteUrl: "{{ steps.publish.output.remoteUrl }}"
        entityRef: "{{ steps.register.output.entityRef }}"
